[{"C:\\Users\\10693298\\Documents\\movie-app\\src\\index.js":"1","C:\\Users\\10693298\\Documents\\movie-app\\src\\App.js":"2","C:\\Users\\10693298\\Documents\\movie-app\\src\\reportWebVitals.js":"3","C:\\Users\\10693298\\Documents\\movie-app\\src\\components\\movieApp.js":"4"},{"size":500,"mtime":1639756949490,"results":"5","hashOfConfig":"6"},{"size":351,"mtime":1640028445824,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1639691272597,"results":"8","hashOfConfig":"6"},{"size":7446,"mtime":1640028389297,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1btse37",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\10693298\\Documents\\movie-app\\src\\index.js",[],"C:\\Users\\10693298\\Documents\\movie-app\\src\\App.js",[],"C:\\Users\\10693298\\Documents\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\10693298\\Documents\\movie-app\\src\\components\\movieApp.js",["19","20"],"import React, {Component} from 'react';\r\n\r\nclass MovieApp extends Component {\r\n    state = {\r\n        currentid: 0,\r\n        //searchTerm: \"\",\r\n        addTitle: \"\",\r\n        addYear: 0,\r\n        addPoster: \"\",\r\n        addDescription: \"\",\r\n        currentMovie: null,\r\n        movieList: [],\r\n    };\r\n\r\n    /*\r\n    updateSearch = (e) => {\r\n        e.preventDefault();\r\n        this.setState({searchTerm: e.target.value})\r\n    }\r\n\r\n    findMovies = () => {\r\n        console.log(this.state.searchTerm);\r\n    }\r\n    */\r\n\r\n    addTitle = (e) => {\r\n        e.preventDefault();\r\n        this.setState({addTitle: e.target.value});\r\n    }\r\n\r\n    addYear = (e) => {\r\n        e.preventDefault();\r\n        this.setState({addYear: e.target.value});\r\n    }\r\n\r\n    addPoster = (e) => {\r\n        e.preventDefault();\r\n        this.setState({addPoster: e.target.value});\r\n    }\r\n\r\n    addDescription = (e) => {\r\n        e.preventDefault();\r\n        this.setState({addDescription: e.target.value});\r\n    }\r\n\r\n    onExit = () => {\r\n        console.log(this.state.currentMovie)\r\n        this.setState({currentMovie: null});\r\n    }\r\n\r\n    onDelete = () => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {'Content-Type': 'application/json'},\r\n        }\r\n        fetch(`https://jmdb-391740.herokuapp.com/${this.state.currentMovie.id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n        this.onExit()\r\n    }\r\n\r\n    fetchMovies = () => {\r\n        fetch('https://jmdb-391740.herokuapp.com/movies/',{\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            this.setState({movieList: response})\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMovies();\r\n    }\r\n\r\n    setMovie = (e) => {\r\n        this.setState({currentMovie: this.state.movieList[Number(e.target.id)]})\r\n    }\r\n\r\n    showMovie = () => {\r\n        if(this.state.currentMovie){\r\n            return (\r\n                <div className=\"card\">\r\n                    <div class=\"movie-title\">{this.state.currentMovie && this.state.currentMovie.title} {this.state.currentMovie && this.state.currentMovie.year}</div>\r\n                    <div className=\"card-content\">\r\n                        <img class=\"movie-poster\" src={this.state.currentMovie && this.state.currentMovie.poster}/>\r\n                        <p>\r\n                            <hr/>\r\n                            <h4>Description: </h4>\r\n                            <div className='movie-description'>\r\n                                {this.state.currentMovie && this.state.currentMovie.description}\r\n                            </div>\r\n                        </p>\r\n                        <div className='movie-buttons'>\r\n                            <button onClick={this.onExit}>Exit</button> <button onClick={this.onDelete}>Delete</button><br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <div>No movie selected</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    getMovies = () => {\r\n        if(this.state.movieList.length < 0){\r\n            return(\r\n                <div>No movies found</div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                this.state.movieList.map((movie,i) => {\r\n                    return(\r\n                        <div>\r\n                            <a onClick={this.setMovie} id={i} href=\"#\">{movie.title} ({movie.year})</a>\r\n                        </div>\r\n                    )\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    addMovie = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                title: this.state.addTitle,\r\n                year: this.state.addYear,\r\n                poster: this.state.addPoster,\r\n                description: this.state.addDescription,\r\n            })\r\n        }\r\n        fetch('https://jmdb-391740.herokuapp.com', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"App-body\">\r\n                <div className=\"leftside\">\r\n                <div>\r\n                    {/*\r\n                    <form className=\"card\">\r\n                    <div className='card-title'>\r\n                        Search Movie:\r\n                    </div>\r\n                    <div className='card-content'>\r\n                        <div className='form-divider'>\r\n                        <label>\r\n                            Title: <input type=\"text\" onChange={this.updateSearch}/>\r\n                        </label>\r\n                        <button className='form-button' onClick={this.findMovies}>\r\n                            Search\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                    */}\r\n                    <form className=\"card\">\r\n                        <div className='card-title'>\r\n                            Add Movie:\r\n                        </div>\r\n                        <div className='card-content'>\r\n                            <div className='form-divider'>\r\n                            <div>\r\n                                <label>\r\n                                Title: <input type=\"text\" onChange={this.addTitle}/>\r\n                                </label><br/>\r\n                                <label>\r\n                                Year: <input type=\"number\" onChange={this.addYear}/>\r\n                                </label>\r\n                            </div>\r\n                            <div className='empty'></div>\r\n                            <div>\r\n                                <label>\r\n                                Poster URL: <input type=\"text\" onChange={this.addPoster}/>\r\n                                </label><br/>\r\n                                <label>\r\n                                Description: <input type=\"text\" onChange={this.addDescription}/>\r\n                                </label>\r\n                            </div>\r\n                            <div className='form-button'>\r\n                                <br/>\r\n                                <button onClick={this.addMovie}>\r\n                                Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n                <div className='card'>\r\n                    <div className='card-title'>\r\n                        Movies:\r\n                    </div>\r\n                    <div className='card-content'>    \r\n                        {this.getMovies()}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"rightside\">\r\n                    {this.showMovie()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieApp;",{"ruleId":"21","severity":1,"message":"22","line":87,"column":25,"nodeType":"23","endLine":87,"endColumn":116},{"ruleId":"24","severity":1,"message":"25","line":124,"column":29,"nodeType":"23","endLine":124,"endColumn":72},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]